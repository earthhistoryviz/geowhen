{"version":3,"sources":["overmind/actions.js","overmind/index.js","overmind/state.js","components/Search.js","App.js","index.js"],"names":["onInitializeOvermind","a","state","isLoading","axios","get","headers","Accept","responseType","result","spreadsheet","xlsx","read","Uint8Array","data","type","masterdata","utils","sheet_to_json","Sheets","slice","console","log","byperiod","reduce","acc","row","Period","push","options","periods","add","Region","regions","Set","displayedStages","view","filterOptions","Array","from","doFilter","filteredPeriods","filter","Object","keys","forEach","periodName","bp","stageData","STAGE","toUpperCase","includes","queryStr","region","mergeFilter","toMerge","actions","applyFilters","filterModal","visible","alert","JSON","stringify","toggleFilterModal","overmind","createOvermind","raw","period","topAge","bottomAge","sortBy","useAppState","createStateHook","useActions","createActionsHook","Search","props","fm","filterState","handleCloseModal","InputGroup","className","size","FormControl","onChange","placeholder","Button","variant","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","Select","event","target","value","selected","map","index","Group","as","Row","Label","column","sm","Col","Control","Check","name","Footer","window","processGithubResponse","App","style","width","evt","height","overflowX","stage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d602c3.chunk.js","sourcesContent":["import axios from 'axios';\nimport xlsx from 'xlsx';\n\nexport const onInitializeOvermind = async ({ state }) => {\n  state.isLoading = true;\n  const result = await axios.get('https://api.github.com/repos/earthhistoryviz/geowhen/contents/data/MasterData.xlsx', {\n    headers: {\n      Accept: 'application/vnd.github.v3.raw'\n    },\n    responseType: 'arraybuffer'\n  });\n  const spreadsheet = xlsx.read(new Uint8Array(result.data), { type: 'array' });\n  const masterdata = xlsx.utils.sheet_to_json(spreadsheet.Sheets['Geological stages']).slice(1);\n  console.log(masterdata);\n\n  // Note from Aaron: we stopped here, we were debugging any period names that show up in\n  // the byperiod variable which didn't make sense (\"undefined\", \"era\", etc.).  All of them\n  // found thus far we errors in the spreadsheet itself, so no need for code to deal with them.\n  const byperiod = masterdata.reduce((acc, row) => {\n    if (!acc[row.Period]) acc[row.Period] = [];\n    acc[row.Period].push(row);\n    return acc;\n  }, {});\n\n  // Populate options for periods and regions in the filtering menu\n  const options = masterdata.reduce((acc, row) => {\n    acc.periods.add(row.Period);\n    if (row.Region && row.Region !== ' ') acc.regions.add(row.Region);\n\n    return acc;\n  }, { periods: new Set(), regions: new Set() });\n\n  console.log('byperiod = ', byperiod);\n  state.masterdata.byperiod = byperiod;\n  state.masterdata.displayedStages = byperiod;\n\n  state.view.filterOptions.periods = Array.from(options.periods);\n  state.view.filterOptions.regions = Array.from(options.regions);\n\n  state.isLoading = false;\n};\n\n/****************************************************************************\n *\n * Filtering\n *\n ***************************************************************************/\n\nexport const doFilter = ({ state }) => {\n  const filteredPeriods = {};\n  const filter = state.filter;\n  Object.keys(state.masterdata.byperiod).forEach((periodName) => {\n    const bp = state.masterdata.byperiod[periodName];\n    filteredPeriods[periodName] = bp.filter(stageData => {\n      if (!stageData.STAGE.toUpperCase().includes(filter.queryStr.toUpperCase())) {\n        console.log('query string denies inclusion of '+stageData.STAGE);\n        return false;\n      }\n      console.log('region type is: ', typeof stageData.Region);\n      if (filter.region && ((typeof stageData.Region !== 'string') || !stageData.Region.toUpperCase().includes(filter.region.toUpperCase()))) {\n        console.log('filter region denies inclusion of '+stageData.STAGE);\n        return false;\n      }\n      return true;\n    });\n  });\n  state.masterdata.displayedStages = filteredPeriods;\n};\n\nexport const mergeFilter = ({ state, actions }, toMerge) => {\n  state.filter = {\n    ...state.filter,\n    ...toMerge\n  };\n\n  actions.doFilter();\n  \n  console.log(state);\n};\n\nexport const applyFilters = ({ state }) => {\n  state.view.filterModal.visible = !state.view.filterModal.visible;\n  alert('Im going to filter using: \\n' + JSON.stringify(state.filter));\n};\n\nexport const toggleFilterModal = ({ state }) => {\n  state.view.filterModal.visible = !state.view.filterModal.visible;\n};\n","import { createOvermind } from 'overmind';\nimport { createStateHook, createActionsHook } from 'overmind-react';\n\nimport { state } from './state';\nimport * as actions from './actions';\n\nexport const overmind = createOvermind({\n  state,\n  actions,\n});\n\nexport const useAppState = createStateHook();\nexport const useActions = createActionsHook();\n\n","export const state = {\n  isLoading: true,\n  masterdata: {\n    byperiod: {},\n    displayedStages: {}, // same format as byperiod\n    raw: []\n  },\n  filter: {\n    period: false,\n    region: false,\n    topAge: false,\n    bottomAge: false,\n    sortBy: false,\n    queryStr: '',\n  },\n  view: {\n    filterModal: {\n      visible: false\n    },\n    filterOptions: {\n      periods: [],\n      regions: []\n    }\n  }\n};\n","import Button from 'react-bootstrap/Button';\nimport React from 'react';\nimport { InputGroup, FormControl, Modal, FloatingLabel, Form, Row, Col } from 'react-bootstrap';\nimport { useAppState, useActions } from '../overmind';\n\nconst Search = (props) => {\n  const actions = useActions();\n  const state = useAppState();\n\n  const fm = state.view.filterModal;\n  const filterOptions = state.view.filterOptions;\n  const filterState = state.filter;\n\n  const handleCloseModal = () => actions.toggleFilterModal();\n  const handleShowModal = () => actions.toggleFilterModal();\n  const handleSubmit = () => actions.applyFilters();\n\n  return (\n    <>\n      <InputGroup className='my-3' size='lg'>\n        <FormControl onChange={props.onChange} aria-label='Large' aria-describedby='inputGroup-sizing-sm' placeholder='Search' />\n        <Button variant='primary' onClick={handleShowModal}>\n          Filter menu\n        </Button>\n\n        <Modal size='lg' show={fm.visible} onHide={handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Advance Filtering Menu</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body className='p-sm-5'>\n            <Form>\n              <h5>Search by:</h5>\n              <FloatingLabel className='my-2' controlId='floatingSelect' label='By Period'>\n                <Form.Select onChange={event => actions.mergeFilter({ period: event.target.value })} aria-label='Floating label select example'>\n                  <option value='' selected={!filterState.period}>All</option>\n                  {filterOptions.periods.map((period, index) => (\n                    <option key={index} value={period} selected={period === filterState.period}>{period}</option>\n                  ))}\n                </Form.Select>\n              </FloatingLabel>\n\n              <FloatingLabel className='my-2' controlId='floatingSelect' label='By Region'>\n                <Form.Select onChange={event => actions.mergeFilter({ region: event.target.value })} aria-label='Floating label select example'>\n                  <option value='' selected={!filterState.region}>All</option>\n                  {filterOptions.regions.map((region, index) => (\n                    <option key={index} value={region} selected={region === filterState.region}>{region}</option>\n                  ))}\n                </Form.Select>\n              </FloatingLabel>\n\n              <Form.Group as={Row} className='mb-3'>\n                <Form.Label column sm='2'>\n                  By Age:\n                </Form.Label>\n                <Col sm='4'>\n                  <Form.Control\n                    type='number'\n                    placeholder='Lower Bound'\n                    onChange={event => { actions.mergeFilter({ bottomAge: event.target.value }); }}\n                  />\n                </Col>\n                <Col className='d-flex justify-content-center' sm='2'>\n                  <p className='m-auto'>to</p>\n                </Col>\n                <Col sm='4'>\n                  <Form.Control\n                    type='number'\n                    placeholder='Upper Bound'\n                    onChange={event => { actions.mergeFilter({ topAge: event.target.value }); }}\n                  />\n                </Col>\n              </Form.Group>\n\n              <hr />\n              <h5>Sort by:</h5>\n\n              <Form.Group\n                className='mb-3'\n                onChange={event => { actions.mergeFilter({ sortBy: event.target.value }); }}\n              >\n                <Form.Check\n                  type='radio'\n                  name='sortBy'\n                  label='sort-alphabetically'\n                  value='alphabet'\n                />\n                <Form.Check\n                  type='radio'\n                  name='sortBy'\n                  label='sort-by-age'\n                  value='age'\n\n                />\n                <Form.Check\n                  type='radio'\n                  name='sortBy'\n                  label='sort-by-region'\n                  value='region'\n                />\n              </Form.Group>\n              <hr />\n              <h5>Group by:</h5>\n            </Form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant='secondary' onClick={handleCloseModal}>\n              Close\n            </Button>\n            <Button variant='danger' onClick={handleCloseModal}>\n              Reset\n            </Button>\n            <Button variant='primary' onClick={handleSubmit}>\n              Apply\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </InputGroup>\n      <p />\n    </>\n  );\n};\n\nexport default Search;\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Button from 'react-bootstrap/Button';\nimport Search from './components/Search';\nimport { useAppState, useActions } from './overmind';\n\nif (!window.processGithubResponse) {\n  window.processGithubResponse = (data) => {\n    console.log('Callback was called w/ data: ', data);\n  };\n}\n\nfunction App () {\n\n  const state = useAppState();\n  const actions = useActions();\n\n  const { isLoading, masterdata } = state;\n\n  const searchUpdated = (evt) => {\n    actions.mergeFilter({ queryStr: evt.target.value });\n  };\n\n  return (\n    <div className='mx-auto mt-4' style={{ width: '90%' }}>\n      {/* Will show \"loading...\" when the stages data is not loaded */}\n      {!isLoading\n        ? (\n          <>\n            <Search onChange={searchUpdated}/>\n            <div\n              className='mt-3 border shadow-sm'\n              style={{ height: '400px', overflowX: 'scroll' }}\n            >\n              <div className='mx-auto row px-2 w-100'>\n\n                {Object.keys(masterdata.displayedStages).map((periodName, index) => (\n                  <div className='row' key={index}>\n                    <strong>{periodName}</strong>\n                    {masterdata.displayedStages[periodName].map((stage, index) => (\n                      <div key={index} className='my-2 col-2 d-flex justify-content-center'>\n\n                        <Button>\n                          {stage.STAGE}\n                        </Button>\n                      </div>\n\n                    ))}\n                  </div>\n                ))}\n\n              </div>\n\n            </div>\n          </>\n          )\n        : <p>Loading...</p>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'overmind-react';\nimport './index.css';\nimport App from './App';\n\nimport { overmind } from './overmind';\n\nReactDOM.render(\n  <Provider value={overmind}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}