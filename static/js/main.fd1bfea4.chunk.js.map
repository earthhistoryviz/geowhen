{"version":3,"sources":["components/Search.js","overmind/actions.js","overmind/index.js","overmind/state.js","App.js","index.js"],"names":["Search","props","useState","showModal","setShowModal","handleCloseModal","InputGroup","className","size","FormControl","onChange","placeholder","Button","variant","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","Select","value","Group","as","Row","Label","column","sm","Col","Control","Check","type","name","id","Footer","onInitializeOvermind","a","state","isLoading","axios","get","headers","Accept","responseType","result","spreadsheet","xlsx","read","Uint8Array","data","masterdata","utils","sheet_to_json","Sheets","slice","byperiod","reduce","acc","row","Period","push","console","log","displayedStages","filterByName","queryStr","filteredPeriods","Object","keys","forEach","periodName","bp","filter","stageData","STAGE","includes","overmind","createOvermind","displaysStages","raw","actions","useAppState","createStateHook","useActions","createActionsHook","window","processGithubResponse","App","style","width","evt","target","height","overflowX","map","index","stage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd1bfea4.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport React, { useState } from 'react';\nimport { InputGroup, FormControl, Modal, FloatingLabel, Form, Row, Col } from 'react-bootstrap';\n\nconst Search = (props) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  return (\n    <>\n      <InputGroup className='my-3' size='lg'>\n        <FormControl onChange={props.onChange} aria-label='Large' aria-describedby='inputGroup-sizing-sm' placeholder='Search' />\n        <Button variant='primary' onClick={handleShowModal}>\n          Filter menu\n        </Button>\n\n        <Modal size='lg' show={showModal} onHide={handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Advance Filtering Menu</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body className='p-sm-5'>\n            <Form>\n              <h5>Search by:</h5>\n              <FloatingLabel className='my-2' controlId='floatingSelect' label='By Stage'>\n                <Form.Select aria-label='Floating label select example'>\n                  <option value='0'>All</option>\n                  <option value='1'>One</option>\n                  <option value='2'>Two</option>\n                  <option value='3'>Three</option>\n                </Form.Select>\n              </FloatingLabel>\n\n              <FloatingLabel className='my-2' controlId='floatingSelect' label='By Region'>\n                <Form.Select aria-label='Floating label select example'>\n                  <option value='0'>All</option>\n                  <option value='1'>One</option>\n                  <option value='2'>Two</option>\n                  <option value='3'>Three</option>\n                </Form.Select>\n              </FloatingLabel>\n\n              <Form.Group as={Row} className='mb-3'>\n                <Form.Label column sm='2'>\n                  By Age:\n                </Form.Label>\n                <Col sm='4'>\n                  <Form.Control placeholder='Lower Bound' />\n                </Col>\n                <Col className='d-flex justify-content-center' sm='2'>\n                  <p className='m-auto'>to</p>\n                </Col>\n                <Col sm='4'>\n                  <Form.Control placeholder='Upper Bound' />\n                </Col>\n              </Form.Group>\n\n              <hr />\n              <h5>Sort by:</h5>\n\n              <Form.Group className='mb-3'>\n                <Form.Check\n                  type='radio'\n                  label='sort-alphabetically'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios1'\n                />\n                <Form.Check\n                  type='radio'\n                  label='sort-by-age'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios2'\n                />\n                <Form.Check\n                  type='radio'\n                  label='sort-by-region'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios3'\n                />\n              </Form.Group>\n              <hr />\n              <h5>Group by:</h5>\n            </Form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant='secondary' onClick={handleCloseModal}>\n              Close\n            </Button>\n            <Button variant='danger' onClick={handleCloseModal}>\n              Reset\n            </Button>\n            <Button variant='primary' onClick={handleCloseModal}>\n              Apply\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </InputGroup>\n      <p />\n    </>\n  );\n};\n\nexport default Search;\n","import axios from 'axios';\nimport xlsx from 'xlsx';\n\n\nexport const onInitializeOvermind = async ({ state }) => {\n  state.isLoading = true;\n  const result = await axios.get('https://api.github.com/repos/earthhistoryviz/geowhen/contents/data/MasterData.xlsx', {\n    headers: {\n      Accept: 'application/vnd.github.v3.raw'\n    },\n    responseType: 'arraybuffer'\n  });\n  const spreadsheet = xlsx.read(new Uint8Array(result.data), { type: 'array' });\n  const masterdata = xlsx.utils.sheet_to_json(spreadsheet.Sheets['Geological stages']).slice(1);\n\n  // Note from Aaron: we stopped here, we were debugging any period names that show up in\n  // the byperiod variable which didn't make sense (\"undefined\", \"era\", etc.).  All of them\n  // found thus far we errors in the spreadsheet itself, so no need for code to deal with them.\n  const byperiod = masterdata.reduce((acc, row) => {\n    if (!acc[row.Period]) acc[row.Period] = [];\n    acc[row.Period].push(row);\n    return acc;\n  }, {});\n\n  console.log('byperiod = ', byperiod);\n  state.masterdata.byperiod = byperiod;\n  state.masterdata.displayedStages = byperiod;\n  state.isLoading = false;\n}\n\nexport const filterByName = ({ state }, queryStr) => {\n  const filteredPeriods = {};\n  Object.keys(state.masterdata.byperiod).forEach((periodName) => {\n    const bp = state.masterdata.byperiod[periodName];\n    filteredPeriods[periodName] = bp.filter(stageData => stageData.STAGE.includes(queryStr));\n  });\n  state.masterdata.displayedStages = filteredPeriods;\n}\n","import { createOvermind } from 'overmind';\nimport { createStateHook, createActionsHook } from 'overmind-react';\n\nimport { state } from './state';\nimport * as actions from './actions';\n\nexport const overmind = createOvermind({\n  state,\n  actions,\n});\n\nexport const useAppState = createStateHook();\nexport const useActions = createActionsHook();\n\n","export const state = {\n  isLoading: true,\n  masterdata: {\n    byperiod: {},\n    displaysStages: {}, // same format as byperiod\n    raw: [],\n  },\n\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Button from 'react-bootstrap/Button';\nimport Search from './components/Search';\nimport { useAppState, useActions } from './overmind';\n\nif (!window.processGithubResponse) {\n  window.processGithubResponse = (data) => {\n    console.log('Callback was called w/ data: ', data);\n  };\n}\n\nfunction App () {\n\n  const state = useAppState();\n  const actions = useActions();\n\n  const { isLoading, masterdata } = state;\n\n  const doFilter = (evt) => {\n    actions.filterByName(evt.target.value);\n  };\n\n  return (\n    <div className='mx-auto mt-4' style={{ width: '90%' }}>\n      {/* Will show \"loading...\" when the stages data is not loaded */}\n      {!isLoading\n        ? (\n          <>\n            <Search onChange={doFilter}/>\n            <div\n              className='mt-3 border shadow-sm'\n              style={{ height: '400px', overflowX: 'scroll' }}\n            >\n              <div className='mx-auto row px-2 w-100'>\n\n                {Object.keys(masterdata.displayedStages).map((periodName, index) => (\n                  <div className='row' key={index}>\n                    <strong>{periodName}</strong>\n                    {masterdata.displayedStages[periodName].map((stage, index) => (\n                      <div key={index} className='my-2 col-2 d-flex justify-content-center'>\n\n                        <Button>\n                          {stage.STAGE}\n                        </Button>\n                      </div>\n\n                    ))}\n                  </div>\n                ))}\n\n              </div>\n\n            </div>\n          </>\n          )\n        : <p>Loading...</p>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'overmind-react';\nimport './index.css';\nimport App from './App';\n\nimport { overmind } from './overmind';\n\nReactDOM.render(\n  <Provider value={overmind}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}