{"version":3,"sources":["overmind/actions.js","overmind/index.js","overmind/state.js","components/Search.js","App.js","index.js"],"names":["onInitializeOvermind","a","state","isLoading","axios","get","headers","Accept","responseType","result","spreadsheet","xlsx","read","Uint8Array","data","type","console","log","masterdata","utils","sheet_to_json","Sheets","slice","byperiod","reduce","acc","row","Period","push","options","periods","add","Region","regions","Set","displayedStages","view","filterOptions","Array","from","doFilter","filteredPeriods","filter","Object","keys","forEach","periodName","bp","stageData","STAGE","toUpperCase","includes","queryStr","region","period","topAge","bottomAge","Base","parseFloat","TOP","sortBy","sort","b","mergeFilter","toMerge","actions","mergeStagingFilter","filterModal","stagingFilter","applyFilters","sf","visible","resetFilters","toggleFilterModal","selectItem","selected","selectedItem","overmind","createOvermind","raw","periodColors","ARCHEAN","CAMBRIAN","CARBONIFEROUS","CRETACEOUS","DEVONIAN","JURASSIC","NEOGENE","ORDOVICIAN","PALEOGENE","PERMIAN","PROTERO","QUATERNARY","SILURIAN","TRIASSIC","useAppState","createStateHook","useActions","createActionsHook","Search","props","fm","filterState","handleCloseModal","InputGroup","className","size","FormControl","onChange","placeholder","Button","variant","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","Select","event","target","value","map","index","Group","as","Row","Label","column","sm","Col","Control","Check","name","checked","Footer","window","processGithubResponse","App","stageimage","image_url","http","XMLHttpRequest","open","send","status","imageExists","style","width","evt","height","overflowX","length","align","border","borderRadius","boxShadow","margin","stage","backgroundColor","fontSize","fontWeight","toFixed","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.085a18f1.chunk.js","sourcesContent":["import axios from 'axios';\nimport xlsx from 'xlsx';\n// import clone from 'clone';\n\nexport const onInitializeOvermind = async ({ state }) => {\n  state.isLoading = true;\n  const result = await axios.get('https://api.github.com/repos/earthhistoryviz/geowhen/contents/data/MasterData.xlsx', {\n    headers: {\n      Accept: 'application/vnd.github.v3.raw'\n    },\n    responseType: 'arraybuffer'\n  });\n  const spreadsheet = xlsx.read(new Uint8Array(result.data), { type: 'array' });\n  console.log('spreadsheet = ', spreadsheet);\n  const masterdata = xlsx.utils.sheet_to_json(spreadsheet.Sheets['Geological stages']).slice(1);\n  // console.log(masterdata);\n\n  // Note from Aaron: we stopped here, we were debugging any period names that show up in\n  // the byperiod variable which didn't make sense (\"undefined\", \"era\", etc.).  All of them\n  // found thus far we errors in the spreadsheet itself, so no need for code to deal with them.\n  const byperiod = masterdata.reduce((acc, row) => {\n    if (!acc[row.Period]) acc[row.Period] = [];\n    acc[row.Period].push(row);\n    return acc;\n  }, {});\n\n  // Populate options for periods and regions in the filtering menu\n  const options = masterdata.reduce((acc, row) => {\n    acc.periods.add(row.Period);\n    if (row.Region && row.Region !== ' ') acc.regions.add(row.Region);\n\n    return acc;\n  }, { periods: new Set(), regions: new Set() });\n\n  console.log('byperiod = ', byperiod);\n  state.masterdata.byperiod = byperiod;\n  state.masterdata.displayedStages = byperiod;\n\n  state.view.filterOptions.periods = Array.from(options.periods);\n  state.view.filterOptions.regions = Array.from(options.regions);\n\n  state.isLoading = false;\n};\n\n/****************************************************************************\n *\n * Filtering\n *\n ***************************************************************************/\n\nexport const doFilter = ({ state }) => {\n  const filteredPeriods = {};\n  const filter = state.filter;\n  Object.keys(state.masterdata.byperiod).forEach((periodName) => {\n    const bp = state.masterdata.byperiod[periodName];\n    filteredPeriods[periodName] = bp.filter(stageData => {\n      if (!stageData.STAGE.toUpperCase().includes(filter.queryStr.toUpperCase())) {\n        console.log('query string denies inclusion of ' + stageData.STAGE);\n        return false;\n      }\n      console.log('region type is: ', typeof stageData.Region);\n      if (filter.region && ((typeof stageData.Region !== 'string') || !stageData.Region.toUpperCase().includes(filter.region.toUpperCase()))) {\n        console.log('filter region denies inclusion of ' + stageData.STAGE);\n        return false;\n      }\n\n      if (filter.period && ((typeof stageData.Period !== 'string') || !stageData.Period.toUpperCase().includes(filter.period.toUpperCase()))) {\n        return false;\n      }\n\n      if (filter.topAge && filter.bottomAge && (stageData.Base < parseFloat(filter.topAge) || stageData.TOP > parseFloat(filter.bottomAge))) {\n        return false;\n      }\n      return true;\n    });\n\n    if (filter.sortBy === 'alphabet') {\n      filteredPeriods[periodName].sort((a, b) => {\n        if (a.STAGE < b.STAGE) return -1;\n        else if (a.STAGE > b.STAGE) return 1;\n        else return 0;\n      });\n    } else if (filter.sortBy === 'age') {\n      filteredPeriods[periodName].sort((a, b) => {\n        if (a.Base < b.Base) return -1;\n        else if (a.Base > b.Base) return 1;\n        else return 0;\n      });\n    } else if (filter.sortBy === 'region') {\n      // might need to change UI for this\n    }\n  });\n\n  state.masterdata.displayedStages = filteredPeriods;\n};\n\nexport const mergeFilter = ({ state, actions }, toMerge) => {\n  state.filter = {\n    ...state.filter,\n    ...toMerge\n  };\n\n  actions.doFilter();\n  console.log(state.filter);\n};\n\nexport const mergeStagingFilter = ({ state }, toMerge) => {\n  state.view.filterModal.stagingFilter = {\n    ...state.view.filterModal.stagingFilter,\n    ...toMerge\n  };\n};\n\nexport const applyFilters = ({ state, actions }) => {\n  const sf = state.view.filterModal.stagingFilter;\n  state.view.filterModal.visible = !state.view.filterModal.visible;\n  if (sf.bottomAge && !sf.topAge) {\n    sf.topAge = sf.bottomAge;\n  }\n  state.filter = { ...sf };\n  actions.doFilter();\n};\n\nexport const resetFilters = ({ state }) => {\n  state.view.filterModal.stagingFilter = {\n    period: false,\n    region: false,\n    topAge: false,\n    bottomAge: false,\n    sortBy: false,\n    queryStr: ''\n  };\n};\n\nexport const toggleFilterModal = ({ state }) => {\n  if (!state.view.filterModal.visible) {\n    state.view.filterModal.stagingFilter = { ...state.filter };\n  }\n  state.view.filterModal.visible = !state.view.filterModal.visible;\n};\n\nexport const selectItem = ({ state }, selected) => {\n  state.selectedItem = { ...selected };\n};\n","import { createOvermind } from 'overmind';\nimport { createStateHook, createActionsHook } from 'overmind-react';\n\nimport { state } from './state';\nimport * as actions from './actions';\n\nexport const overmind = createOvermind({\n  state,\n  actions,\n});\n\nexport const useAppState = createStateHook();\nexport const useActions = createActionsHook();\n\n","export const state = {\n  isLoading: true,\n  selectedItem: false,\n  masterdata: {\n    byperiod: {},\n    displayedStages: {}, // same format as byperiod\n    raw: []\n  },\n  filter: {\n    period: false,\n    region: false,\n    topAge: false,\n    bottomAge: false,\n    sortBy: false,\n    queryStr: ''\n  },\n  view: {\n    filterModal: {\n      visible: false,\n      stagingFilter: {} // same as filter above\n    },\n    filterOptions: {\n      periods: [],\n      regions: []\n    },\n    periodColors: {\n      ARCHEAN: 'red',\n      CAMBRIAN: 'black',\n      CARBONIFEROUS: 'green',\n      CRETACEOUS: 'blue',\n      DEVONIAN: 'yellow',\n      JURASSIC: 'pink',\n      NEOGENE: 'orange',\n      ORDOVICIAN: 'maroon',\n      PALEOGENE: 'lime',\n      PERMIAN: 'olive',\n      PROTERO: 'navy',\n      QUATERNARY: 'beige',\n      SILURIAN: 'coral',\n      TRIASSIC: 'cyan'\n    }\n  }\n};\n","import Button from 'react-bootstrap/Button';\nimport React from 'react';\nimport { InputGroup, FormControl, Modal, FloatingLabel, Form, Row, Col } from 'react-bootstrap';\nimport { useAppState, useActions } from '../overmind';\n\nconst Search = (props) => {\n  const actions = useActions();\n  const state = useAppState();\n\n  const fm = state.view.filterModal;\n  const filterOptions = state.view.filterOptions;\n  const filterState = fm.stagingFilter;\n\n  const handleCloseModal = () => actions.toggleFilterModal();\n  const handleShowModal = () => actions.toggleFilterModal();\n  const handleSubmit = () => actions.applyFilters();\n\n  return (\n    <>\n      <InputGroup className='my-3' size='lg'>\n        <FormControl onChange={props.onChange} aria-label='Large' aria-describedby='inputGroup-sizing-sm' placeholder='Search' />\n        <Button variant='primary' onClick={handleShowModal}>\n          Filter menu\n        </Button>\n\n        <Modal size='lg' show={fm.visible} onHide={handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Advance Filtering Menu</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body className='p-sm-5'>\n            <Form>\n              <h5>Search by:</h5>\n              <FloatingLabel className='my-2' controlId='floatingSelect' label='By Period'>\n                <Form.Select onChange={event => actions.mergeStagingFilter({ period: event.target.value })} aria-label='Floating label select example'>\n                  <option value='' selected={!filterState.period}>All</option>\n                  {filterOptions.periods.map((period, index) => (\n                    <option key={index} value={period} selected={period === filterState.period}>{period}</option>\n                  ))}\n                </Form.Select>\n              </FloatingLabel>\n\n              <FloatingLabel className='my-2' controlId='floatingSelect' label='By Region'>\n                <Form.Select onChange={event => actions.mergeStagingFilter({ region: event.target.value })} aria-label='Floating label select example'>\n                  <option value='' selected={!filterState.region}>All</option>\n                  {filterOptions.regions.map((region, index) => (\n                    <option key={index} value={region} selected={region === filterState.region}>{region}</option>\n                  ))}\n                </Form.Select>\n              </FloatingLabel>\n\n              <Form.Group as={Row} className='mb-3'>\n                <Form.Label column sm='2'>\n                  By Age:\n                </Form.Label>\n                <Col sm='4'>\n                  <Form.Control\n                    type='number'\n                    placeholder='Lower Bound'\n                    onChange={event => { actions.mergeStagingFilter({ bottomAge: event.target.value }); }}\n                    value={filterState.bottomAge}\n                  />\n                </Col>\n                <Col className='d-flex justify-content-center' sm='2'>\n                  <p className='m-auto'>to</p>\n                </Col>\n                <Col sm='4'>\n                  <Form.Control\n                    type='number'\n                    placeholder='Upper Bound'\n                    onChange={event => { actions.mergeStagingFilter({ topAge: event.target.value }); }}\n                    value={filterState.topAge}\n                  />\n                </Col>\n              </Form.Group>\n\n              <hr />\n              <h5>Sort by:</h5>\n\n              <Form.Group\n                className='mb-3'\n                onChange={event => { actions.mergeStagingFilter({ sortBy: event.target.value }); }}\n              >\n                <Form.Check\n                  type='radio'\n                  name='sortBy'\n                  label='sort-alphabetically'\n                  value='alphabet'\n                  checked={filterState.sortBy === 'alphabet'}\n                />\n                <Form.Check\n                  type='radio'\n                  name='sortBy'\n                  label='sort-by-age'\n                  value='age'\n                  checked={filterState.sortBy === 'age'}\n                />\n                <Form.Check\n                  type='radio'\n                  name='sortBy'\n                  label='sort-by-region (coming soon)'\n                  value='region'\n                  checked={filterState.sortBy === 'region'}\n                />\n              </Form.Group>\n              <hr />\n              <h5>Group by:</h5>\n            </Form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant='secondary' onClick={handleCloseModal}>\n              Close\n            </Button>\n            <Button variant='danger' onClick={actions.resetFilters}>\n              Reset\n            </Button>\n            <Button variant='primary' onClick={handleSubmit}>\n              Apply\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </InputGroup>\n      <p />\n    </>\n  );\n};\n\nexport default Search;\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Button from 'react-bootstrap/Button';\nimport Search from './components/Search';\nimport { useAppState, useActions } from './overmind';\n\nif (!window.processGithubResponse) {\n  window.processGithubResponse = (data) => {\n    console.log('Callback was called w/ data: ', data);\n  };\n}\n\nfunction imageExists (image_url) {\n  let http = new XMLHttpRequest();\n  http.open('HEAD', image_url, false);\n  http.send();\n  return http.status != 404;\n}\n\nfunction App () {\n  const state = useAppState();\n  const actions = useActions();\n\n  const periodColors = state.view.periodColors;\n\n  // const result = masterdata.displayedStages(\"Quaternary\");\n  const { isLoading, masterdata } = state;\n\n  const searchUpdated = (evt) => {\n    actions.mergeFilter({ queryStr: evt.target.value });\n  };\n\n  let stageimage = false;\n  if (state.selectedItem) {\n    stageimage = `/geowhen/stage-charts/${state.selectedItem.Period.toUpperCase()}_regional.jpg`;\n    if (!imageExists(stageimage)) {\n      stageimage = false;\n    }\n  }\n\n  return (\n    <div className='mx-auto mt-4' style={{ width: '90%' }}>\n      {/* Will show \"loading...\" when the stages data is not loaded */}\n      {!isLoading\n        ? (\n          <>\n            <Search onChange={searchUpdated} />\n            <div\n              className='mt-5 border shadow-sm'\n              style={{ height: '400px', overflowX: 'scroll' }}\n            >\n              <div className='scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4 pt-2'>\n\n                {Object.keys(masterdata.displayedStages).map((periodName, index) => {\n                  if (masterdata.displayedStages[periodName] && masterdata.displayedStages[periodName].length < 1) {\n                    return '';\n                  }\n                  return (\n                    <div className='col' align='center' style={{ border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }} key={index}>\n                      <strong>{periodName}</strong>\n                      {masterdata.displayedStages[periodName].map((stage, index) => (\n                        <div key={index} className='my-2 col-8 d-flex justify-content-center'>\n\n                          <Button style={{ backgroundColor: periodColors[stage.Period] }} onClick={() => { actions.selectItem(stage); }}>\n                            {stage.STAGE}\n                          </Button>\n                        </div>\n\n                      ))}\n                    </div>\n                  );\n                })}\n\n              </div>\n\n            </div>\n\n            {/* Main content */}\n            {!state.selectedItem ? ''\n              : <div className='mt-5 border shadow-sm row flex-nowrap mt-4 pb-4 pt-2' style={{ border: '20px solid ', borderRadius: '10px' }}>\n                <div style={{ width: '500px' }} align='center'>\n                  <div style={{ width: '480px', border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }}>\n                    <div style={{ fontSize: '34px' }}>\n                      {state.selectedItem.STAGE}\n                    </div>\n                    <div style={{ fontWeight: 'normal' }}>\n                      (Period: {state.selectedItem.Period})\n                    </div>\n                  </div>\n                  <div style={{ width: '480px', border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }}>\n                    <div style={{ fontWeight: '' }}>\n                      Region:\n                    </div>\n                    <div>\n                      {state.selectedItem.Region}\n                    </div>\n                  </div>\n                  <div style={{ width: '480px', border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }}>\n                    <div style={{ fontWeight: 'bold' }}>\n                      Top Age:\n                    </div>\n                    <div>\n                      {+(state.selectedItem.TOP).toFixed(3)}\n                    </div>\n                  </div>\n                  <div style={{ width: '480px', border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }}>\n                    <div style={{ fontWeight: 'bold' }}>\n                      Base Age:\n                    </div>\n                    <div>\n                      {+(state.selectedItem.Base).toFixed(3)}\n                    </div>\n                  </div>\n                  <div style={{ width: '480px', border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }}>\n                    <div style={{ fontWeight: 'bold' }}>\n                      Top Calibration:\n                    </div>\n                    <div>\n                      {state.selectedItem['Top calibration']}\n                    </div>\n                  </div>\n                  <div style={{ width: '480px', border: '1px solid #DDDDDD', borderRadius: '3px', boxShadow: '3px 3px #CCCCC', margin: '5px 5px 5px 5px' }}>\n                    <div style={{ fontWeight: 'bold' }}>\n                      Base Calibration:\n                    </div>\n                    <div>\n                      {state.selectedItem['Base calibration']}\n                    </div>\n                  </div>\n\n                </div>\n                <div>\n                  {stageimage ? <img src={stageimage} /> : ''}\n                </div>\n              </div>}\n\n          </>\n          )\n        : <p>Loading...</p>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'overmind-react';\nimport './index.css';\nimport App from './App';\n\nimport { overmind } from './overmind';\n\nReactDOM.render(\n  <Provider value={overmind}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}